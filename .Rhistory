load("C:/Users/jimjo/Desktop/MIST5620/DM3/.RData")
# Create correlation matrix
correlation_matrix <- cor(selected_df, use = "complete.obs")
# Load Required Libraries
library(tidyverse)
library(readxl)
library(writexl)
library(stargazer)
library(dplyr)
library(car)
library(psych)
# --- Step 1: Read Data ---
graduates <- read_excel("graduates.xlsx")
crime <- read_excel("crime.xlsx")
poverty <- read_excel("poverty.xlsx")
setwd("C:/Users/jimjo/Desktop/MIST5620/5620 Project")
# --- Step 1: Read Data ---
graduates <- read_excel("graduates.xlsx")
crime <- read_excel("crime.xlsx")
poverty <- read_excel("poverty.xlsx")
income <- read_excel("income.xlsx")
unemployment <- read_excel("unemployment.xlsx")
employment <- read_excel("employment.xlsx")
births <- read_excel("births.xlsx")
housing <- read_excel("housing.xlsx")
# --- Step 2: Standardize County column to character across all datasets ---
datasets <- list(graduates, crime, income, poverty, unemployment, employment, births, housing)
datasets <- lapply(datasets, function(df) {
df$County <- as.character(df$County)
return(df)
})
list2env(setNames(datasets, c("graduates", "crime", "income", "poverty", "unemployment", "employment", "births", "housing")), .GlobalEnv)
# --- Step 3: Combine Datasets ---
fullJoin <- crime %>%
full_join(graduates, by = "County") %>%
full_join(income, by = "County") %>%
full_join(poverty, by = "County") %>%
full_join(unemployment, by = "County") %>%
full_join(employment, by = "County") %>%
full_join(births, by = "County") %>%
full_join(housing, by = "County")
# --- Step 4: Clean County Names & Drop Metadata Rows ---
clean_df <- fullJoin %>%
filter(
!is.na(County),
County != "",
County != "GEORGIA",
!grepl("(?i)source|note|bureau|census|department|establish", County)
)
# Save the cleaned version
write_xlsx(clean_df, "fullJoinDF_Cleaned.xlsx")
# --- Step 5: Load Cleaned Dataset and Prepare for Modeling ---
df <- read_excel("fullJoinDF_Cleaned.xlsx")
# Convert target to numeric
df$`2023 Total Index Crime Rate per 100,000 Population` <- as.numeric(df$`2023 Total Index Crime Rate per 100,000 Population`)
df <- df[!is.na(df$`2023 Total Index Crime Rate per 100,000 Population`), ]
# Select numeric-only columns
numeric_df <- df %>% select(where(is.numeric))
# Impute missing values with column means
for (col in names(numeric_df)) {
numeric_df[[col]][is.na(numeric_df[[col]])] <- mean(numeric_df[[col]], na.rm = TRUE)
}
# --- Step 6: Univariate P-Value Analysis ---
target_var <- "2023 Total Index Crime Rate per 100,000 Population"
predictors <- setdiff(names(numeric_df), target_var)
pval_results <- sapply(predictors, function(var) {
formula <- as.formula(paste0("`", target_var, "` ~ `", var, "`"))
model <- lm(formula, data = numeric_df)
summary(model)$coefficients[2, 4]
})
pval_df <- data.frame(
Column_Name = names(pval_results),
P_Value = round(pval_results, 5),
row.names = NULL
) %>%
arrange(desc(P_Value))
print(pval_df)
# --- Step 7: Build Refined MLR Model ---
refined_model <- lm(`2023 Total Index Crime Rate per 100,000 Population` ~
`2022 Related Children in Families, Age 5-17, in Poverty` +
`2018-2022 Persons Age 65 and Over in Poverty, Percent` +
`2018-2022 Families Below Poverty Level, Percent` +
`2023 Labor Force Employed` +
`2023 Black Births` +
`2018-2022 Renter-Occupied Housing Units, Percent`,
data = numeric_df)
summary(refined_model)
# Define variables used in the final model (including target)
selected_vars <- c(
"2023 Total Index Crime Rate per 100,000 Population",
"2022 Related Children in Families, Age 5-17, in Poverty",
"2018-2022 Persons Age 65 and Over in Poverty, Percent",
"2018-2022 Families Below Poverty Level, Percent",
"2023 Labor Force Employed",
"2023 Black Births",
"2018-2022 Renter-Occupied Housing Units, Percent"
)
# Subset the dataset to only these columns
selected_df <- numeric_df %>% select(all_of(selected_vars))
# Ensure it's a data frame
selected_df <- as.data.frame(selected_df)
stargazer(selected_df,
type = "html",
title = "Descriptive Statistics",
digits = 3,
out = "DescriptiveStatistics.html")
# Create correlation matrix
correlation_matrix <- cor(selected_df, use = "complete.obs")
print(correlation_matrix)
# Save correlation matrix to Excel
stargazer(correlation_matrix, title = "Selected Correlations", out = "selectCorrelations.html")
print(correlation_matrix)
latex_table <- xtable(correlation_matrix)
# Save correlation matrix to html file
print(latex_table, type = "latex", file = "correlation_matrix.tex")
library(xtable)
install.packages('xtable')
library(xtable)
print(correlation_matrix)
latex_table <- xtable(correlation_matrix)
# Save correlation matrix to html file
print(latex_table, type = "latex", file = "correlation_matrix.tex")
# Save correlation matrix to html
stargazer(correlation_matrix, title = "Selected Correlations", out = "selectCorrelations.html")
